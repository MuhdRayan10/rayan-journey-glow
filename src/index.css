@tailwind base;
@tailwind components;
@tailwind utilities;

/* Rayan's Portfolio - Hyper-modern Monochrome Design System
All colors MUST be HSL. Pure black & white aesthetic with glassmorphism.
*/

@layer base {
  :root {
    /* Core Background & Foreground */
    --bg-main: 0 0% 0%; /* #000000 - pure black */
    --fg-main: 0 0% 100%; /* #ffffff - pure white */
    --fg-dim: 0 0% 70%; /* #b3b3b3 - light gray */
    
    /* Monochrome Accent System */
    --accent-white: 0 0% 100%; /* #ffffff */
    --accent-gray: 0 0% 50%; /* #808080 */
    --accent-black: 0 0% 0%; /* #000000 */
    
    /* Glassmorphism System */
    --glass-bg: 0 0% 100%; /* for rgba(255,255,255,0.06) */
    --glass-border: 0 0% 100%; /* for rgba(255,255,255,0.12) */
    
    /* Radius System */
    --r-xs: 8px;
    --r-sm: 14px;
    --r-md: 20px;
    --r-xl: 32px;
    --r-pill: 9999px;
    
    /* Shadows */
    --shadow-glass: 0 0 24px -8px rgba(255,255,255,0.1), 0 10px 40px rgba(0,0,0,0.8);
    --shadow-glow: 0 0 40px rgba(255,255,255,0.3);
    
    /* Design System Tokens */
    --background: var(--bg-main);
    --foreground: var(--fg-main);
    --card: var(--bg-main);
    --card-foreground: var(--fg-main);
    --popover: var(--bg-main);
    --popover-foreground: var(--fg-main);
    --primary: var(--accent-white);
    --primary-foreground: var(--bg-main);
    --secondary: 0 0% 10%;
    --secondary-foreground: var(--fg-main);
    --muted: 0 0% 10%;
    --muted-foreground: var(--fg-dim);
    --accent: var(--accent-white);
    --accent-foreground: var(--bg-main);
    --destructive: 0 84% 60%;
    --destructive-foreground: var(--fg-main);
    --border: 0 0% 20%;
    --input: 0 0% 10%;
    --ring: var(--accent-white);
    --radius: var(--r-sm);
  }

  .light {
    --bg-main: 0 0% 100%;
    --fg-main: 0 0% 0%;
    --fg-dim: 0 0% 30%;
    --background: var(--bg-main);
    --foreground: var(--fg-main);
    --card: var(--bg-main);
    --card-foreground: var(--fg-main);
    --popover: var(--bg-main);
    --popover-foreground: var(--fg-main);
    --secondary: 0 0% 96%;
    --secondary-foreground: var(--fg-main);
    --muted: 0 0% 96%;
    --muted-foreground: var(--fg-dim);
    --border: 0 0% 90%;
    --input: 0 0% 96%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-grotesk antialiased;
    font-feature-settings: "cv02", "cv03", "cv04", "cv11";
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  /* Glassmorphism Base */
  .glass {
    background: rgba(255, 255, 255, 0.06);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.12);
    box-shadow: var(--shadow-glass);
  }

  .glass-card {
    @apply glass rounded-xl p-6 transition-all duration-300;
  }

  .glass-button {
    @apply glass rounded-full px-6 py-3 transition-all duration-300 hover:shadow-lg;
  }

  /* White Glow Effects */
  .glow-white {
    box-shadow: 0 0 40px rgba(255, 255, 255, 0.3);
  }

  .glow-white-subtle {
    box-shadow: 0 0 24px rgba(255, 255, 255, 0.2);
  }

  /* RGB Gradient Border Animation */
  .rgb-border {
    position: relative;
    background: rgba(255, 255, 255, 0.06);
    backdrop-filter: blur(20px);
    border-radius: var(--r-pill);
    overflow: hidden;
  }

  .rgb-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: conic-gradient(from 0deg, 
      #ff0000, #ff8000, #ffff00, #80ff00, 
      #00ff00, #00ff80, #00ffff, #0080ff, 
      #0000ff, #8000ff, #ff00ff, #ff0080, #ff0000);
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    -webkit-mask-composite: xor;
    animation: rgb-rotate 3s linear infinite;
  }

  .rgb-border:hover::before {
    animation: rgb-rotate 1s linear infinite;
  }

  @keyframes rgb-rotate {
    to {
      transform: rotate(360deg);
    }
  }

  /* Noise Texture */
  .noise-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.04;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    animation: noise-pan 20s linear infinite;
    pointer-events: none;
    z-index: 1;
  }

  @keyframes noise-pan {
    0% { transform: translate(0, 0); }
    25% { transform: translate(-5%, -5%); }
    50% { transform: translate(-10%, 5%); }
    75% { transform: translate(-5%, -10%); }
    100% { transform: translate(0, 0); }
  }

  /* Radial Glow */
  .radial-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 600px;
    height: 600px;
    background: radial-gradient(circle at center, rgba(255,255,255,0.08), transparent 60%);
    pointer-events: none;
    z-index: 2;
  }

  /* Hover Tilt Effect */
  .hover-tilt {
    transition: transform 0.3s ease;
  }

  .hover-tilt:hover {
    transform: perspective(1000px) rotateX(5deg) rotateY(5deg) translateZ(20px);
  }

  /* Typing Animation */
  .typing-cursor::after {
    content: '|';
    animation: blink 1s infinite;
    color: hsl(var(--accent-white));
  }

  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  /* Blob Morphing */
  .blob {
    transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    background: rgba(255, 255, 255, 0.06);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.12);
  }

  .blob.expanded {
    transform: scale(1.2);
    box-shadow: 0 0 60px rgba(255, 255, 255, 0.2), 0 20px 80px rgba(0, 0, 0, 0.8);
  }
}